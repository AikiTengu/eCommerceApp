2020-12-08 23:09:29.992 logback [main] INFO  com.example.demo.SareetaApplication - Starting SareetaApplication on Tengus-MacBook-Pro.local with PID 94715 (/Users/tengu/Documents/GitHub/eCommerceApp/target/classes started by tengu in /Users/tengu/Documents/GitHub/eCommerceApp)
2020-12-08 23:09:29.996 logback [main] INFO  com.example.demo.SareetaApplication - No active profile set, falling back to default profiles: default
2020-12-08 23:09:30.762 logback [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 23:09:30.837 logback [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65ms. Found 4 repository interfaces.
2020-12-08 23:09:31.363 logback [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5c2f7f04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 23:09:31.638 logback [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 23:09:31.653 logback [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-12-08 23:09:31.662 logback [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 23:09:31.662 logback [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.19]
2020-12-08 23:09:31.781 logback [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-12-08 23:09:31.781 logback [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1708 ms
2020-12-08 23:09:31.958 logback [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 23:09:32.127 logback [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 23:09:32.195 logback [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-08 23:09:32.270 logback [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.3.10.Final}
2020-12-08 23:09:32.271 logback [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2020-12-08 23:09:32.427 logback [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-12-08 23:09:32.573 logback [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-08 23:09:33.237 logback [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 23:09:33.810 logback [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 23:09:33.873 logback [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a19c36b, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e0e0ba7, org.springframework.security.web.header.HeaderWriterFilter@77ebc9e6, org.springframework.web.filter.CorsFilter@38856d6e, org.springframework.security.web.authentication.logout.LogoutFilter@3ccefe1b, com.example.demo.security.JWTAuthenticationFilter@299ea986, com.example.demo.security.JWTAuthorizationFilter@1dd9a3ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@cbdc0f4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bdf94f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79bf39e5, org.springframework.security.web.session.SessionManagementFilter@52e92f6, org.springframework.security.web.access.ExceptionTranslationFilter@6c8d638a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5bcfdaf3]
2020-12-08 23:09:33.969 logback [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 23:09:34.108 logback [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-12-08 23:09:34.124 logback [main] ERROR o.apache.catalina.util.LifecycleBase - Failed to start component [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1008)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:226)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:259)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:197)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:311)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:164)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.example.demo.SareetaApplication.main(SareetaApplication.java:24)
Caused by: java.net.BindException: Address already in use
	at java.base/sun.nio.ch.Net.bind0(Native Method)
	at java.base/sun.nio.ch.Net.bind(Net.java:550)
	at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:249)
	at java.base/sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:88)
	at org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:239)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:213)
	at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1116)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1202)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:568)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1005)
	... 14 common frames omitted
2020-12-08 23:09:34.127 logback [main] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2020-12-08 23:09:34.127 logback [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-08 23:09:34.130 logback [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@15.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@15.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@15.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1661)
 java.base@15.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@15.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@15.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1056)
 java.base@15.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1116)
 java.base@15.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
 java.base@15.0.1/java.lang.Thread.run(Thread.java:832)
2020-12-08 23:09:34.130 logback [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@15.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@15.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@15.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1661)
 java.base@15.0.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@15.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1055)
 java.base@15.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1116)
 java.base@15.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
 java.base@15.0.1/java.lang.Thread.run(Thread.java:832)
2020-12-08 23:09:34.132 logback [main] INFO  o.apache.catalina.util.LifecycleBase - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2020-12-08 23:09:34.132 logback [main] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2020-12-08 23:09:34.132 logback [main] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2020-12-08 23:09:34.134 logback [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-08 23:09:34.136 logback [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

2020-12-08 23:09:34.138 logback [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-08 23:09:34.139 logback [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 23:09:34.140 logback [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-08 23:09:34.143 logback [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
